{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\monat-website\\\\src\\\\components\\\\IntroSection.js\",\n  _s = $RefreshSig$();\n// src/components/IntroSection.js\nimport React, { useEffect, useState } from 'react';\nimport './IntroSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phrases = [\"Visualize the city of Tokyo in the year 2070.\", \"Imagine a great battle on the sea between two pirate ships.\", \"Picture a species far more advanced than the human race.\", \"Visualize our civilization if DogeCoin reached 1$.\", \"Imagine a human colony on Mars.\"];\nconst IntroSection = () => {\n  _s();\n  const [currentPhrase, setCurrentPhrase] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [loopNum, setLoopNum] = useState(0);\n  const [typingSpeed, setTypingSpeed] = useState(100);\n  useEffect(() => {\n    const handleTyping = () => {\n      const i = loopNum % phrases.length;\n      const fullText = phrases[i];\n      setCurrentPhrase(fullText.substring(0, currentPhrase.length + 1));\n      if (currentPhrase === fullText) {\n        setTimeout(() => {\n          setCurrentPhrase('');\n          setLoopNum(loopNum + 1);\n        }, 2000);\n      }\n    };\n    if (userInput === '') {\n      const timer = setTimeout(() => handleTyping(), typingSpeed);\n      return () => clearTimeout(timer);\n    }\n  }, [currentPhrase, loopNum, typingSpeed, userInput]);\n  const handleChange = e => {\n    setUserInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"intro-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"intro-title\",\n      children: \"One prompt away from your imagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"prompt-icon\",\n        children: \"\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"prompt-input\",\n        value: userInput,\n        onChange: handleChange,\n        placeholder: currentPhrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button\",\n        children: [\"Generate\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2794\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(IntroSection, \"d8yGYIr4OgU3ipwGXbZTyiCbnKk=\");\n_c = IntroSection;\nexport default IntroSection;\nvar _c;\n$RefreshReg$(_c, \"IntroSection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","phrases","IntroSection","_s","currentPhrase","setCurrentPhrase","userInput","setUserInput","currentIndex","setCurrentIndex","loopNum","setLoopNum","typingSpeed","setTypingSpeed","handleTyping","i","length","fullText","substring","setTimeout","timer","clearTimeout","handleChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/PC/monat-website/src/components/IntroSection.js"],"sourcesContent":["// src/components/IntroSection.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport './IntroSection.css';\r\n\r\nconst phrases = [\r\n  \"Visualize the city of Tokyo in the year 2070.\",\r\n  \"Imagine a great battle on the sea between two pirate ships.\",\r\n  \"Picture a species far more advanced than the human race.\",\r\n  \"Visualize our civilization if DogeCoin reached 1$.\",\r\n  \"Imagine a human colony on Mars.\"\r\n];\r\n\r\nconst IntroSection = () => {\r\n  const [currentPhrase, setCurrentPhrase] = useState('');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [typingSpeed, setTypingSpeed] = useState(100);\r\n\r\n  useEffect(() => {\r\n    const handleTyping = () => {\r\n      const i = loopNum % phrases.length;\r\n      const fullText = phrases[i];\r\n\r\n      setCurrentPhrase(fullText.substring(0, currentPhrase.length + 1));\r\n\r\n      if (currentPhrase === fullText) {\r\n        setTimeout(() => {\r\n          setCurrentPhrase('');\r\n          setLoopNum(loopNum + 1);\r\n        }, 2000);\r\n      }\r\n    };\r\n\r\n    if (userInput === '') {\r\n      const timer = setTimeout(() => handleTyping(), typingSpeed);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [currentPhrase, loopNum, typingSpeed, userInput]);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"intro-section-container\">\r\n      <h1 className=\"intro-title\">\r\n        One prompt away from your imagination\r\n      </h1>\r\n      <div className=\"prompt-box\">\r\n        <span className=\"prompt-icon\">✨</span> {/* Example icon, you can use any other */}\r\n        <input\r\n          type=\"text\"\r\n          className=\"prompt-input\"\r\n          value={userInput}\r\n          onChange={handleChange}\r\n          placeholder={currentPhrase}\r\n        />\r\n        <button className=\"prompt-button\">\r\n          Generate\r\n          <span>➔</span> {/* Example arrow icon */}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IntroSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\monat-website\\\\src\\\\components\\\\IntroSection.js\",\n  _s = $RefreshSig$();\n// src/components/IntroSection.js\nimport React, { useEffect, useState } from 'react';\nimport './IntroSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phrases = [\"Visualize the city of Tokyo in the year 2070.\", \"Imagine a great battle on the sea between two pirate ships.\", \"Picture a species far more advanced than the human race.\", \"Visualize our civilization if DogeCoin reached 1$.\", \"Imagine a human colony on Mars.\"];\nconst IntroSection = () => {\n  _s();\n  const [currentPhrase, setCurrentPhrase] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [loopNum, setLoopNum] = useState(0);\n  const [typingSpeed, setTypingSpeed] = useState(50); // Faster typing speed\n\n  useEffect(() => {\n    const handleTyping = () => {\n      const i = loopNum % phrases.length;\n      const fullText = phrases[i];\n      setCurrentPhrase(fullText.substring(0, currentPhrase.length + 1));\n      if (currentPhrase === fullText) {\n        setTimeout(() => {\n          setCurrentPhrase('');\n          setLoopNum(loopNum + 1);\n        }, 2000);\n      }\n    };\n    if (userInput === '') {\n      const timer = setTimeout(() => handleTyping(), typingSpeed);\n      return () => clearTimeout(timer);\n    }\n  }, [currentPhrase, loopNum, typingSpeed, userInput]);\n  const handleChange = e => {\n    setUserInput(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"intro-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"intro-title\",\n      children: \"One prompt away from your imagination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prompt-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"prompt-icon\",\n        children: \"\\u2728\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"prompt-input\",\n        value: userInput,\n        onChange: handleChange,\n        placeholder: currentPhrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prompt-button\",\n        children: [\"Generate\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2794\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(IntroSection, \"b8xVntCDS7DKkWQXZkkUjxMwiwo=\");\n_c = IntroSection;\nexport default IntroSection;\nvar _c;\n$RefreshReg$(_c, \"IntroSection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","phrases","IntroSection","_s","currentPhrase","setCurrentPhrase","userInput","setUserInput","loopNum","setLoopNum","typingSpeed","setTypingSpeed","handleTyping","i","length","fullText","substring","setTimeout","timer","clearTimeout","handleChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/PC/monat-website/src/components/IntroSection.js"],"sourcesContent":["// src/components/IntroSection.js\nimport React, { useEffect, useState } from 'react';\nimport './IntroSection.css';\n\nconst phrases = [\n  \"Visualize the city of Tokyo in the year 2070.\",\n  \"Imagine a great battle on the sea between two pirate ships.\",\n  \"Picture a species far more advanced than the human race.\",\n  \"Visualize our civilization if DogeCoin reached 1$.\",\n  \"Imagine a human colony on Mars.\"\n];\n\nconst IntroSection = () => {\n  const [currentPhrase, setCurrentPhrase] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [loopNum, setLoopNum] = useState(0);\n  const [typingSpeed, setTypingSpeed] = useState(50); // Faster typing speed\n\n  useEffect(() => {\n    const handleTyping = () => {\n      const i = loopNum % phrases.length;\n      const fullText = phrases[i];\n\n      setCurrentPhrase(fullText.substring(0, currentPhrase.length + 1));\n\n      if (currentPhrase === fullText) {\n        setTimeout(() => {\n          setCurrentPhrase('');\n          setLoopNum(loopNum + 1);\n        }, 2000);\n      }\n    };\n\n    if (userInput === '') {\n      const timer = setTimeout(() => handleTyping(), typingSpeed);\n      return () => clearTimeout(timer);\n    }\n  }, [currentPhrase, loopNum, typingSpeed, userInput]);\n\n  const handleChange = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  return (\n    <div className=\"intro-section-container\">\n      <h1 className=\"intro-title\">\n        One prompt away from your imagination\n      </h1>\n      <div className=\"prompt-box\">\n        <span className=\"prompt-icon\">✨</span> {/* Example icon, you can use any other */}\n        <input\n          type=\"text\"\n          className=\"prompt-input\"\n          value={userInput}\n          onChange={handleChange}\n          placeholder={currentPhrase}\n        />\n        <button className=\"prompt-button\">\n          Generate\n          <span>➔</span> {/* Example arrow icon */}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default IntroSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\monat-website\\\\src\\\\components\\\\AudioPlayer.js\",\n  _s = $RefreshSig$();\n// src/components/AudioPlayer.js\nimport React, { useEffect, useRef } from 'react';\nimport './AudioPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = ({\n  isPlaying,\n  togglePlayPause\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = 0.2; // Set the volume to 20%\n      if (isPlaying) {\n        audioRef.current.play();\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      loop: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/Ethereal.mp3\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-icon\",\n      onClick: togglePlayPause,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bar ${isPlaying ? '' : 'static'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bar ${isPlaying ? '' : 'static'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bar ${isPlaying ? '' : 'static'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bar ${isPlaying ? '' : 'static'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioPlayer, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = AudioPlayer;\nexport default AudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"AudioPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","AudioPlayer","isPlaying","togglePlayPause","_s","audioRef","current","volume","play","pause","className","children","ref","loop","src","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/monat-website/src/components/AudioPlayer.js"],"sourcesContent":["// src/components/AudioPlayer.js\nimport React, { useEffect, useRef } from 'react';\nimport './AudioPlayer.css';\n\nconst AudioPlayer = ({ isPlaying, togglePlayPause }) => {\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = 0.2; // Set the volume to 20%\n      if (isPlaying) {\n        audioRef.current.play();\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying]);\n\n  return (\n    <div className=\"audio-player-container\">\n      <audio ref={audioRef} loop>\n        <source src=\"/Ethereal.mp3\" type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n      <div className=\"sound-icon\" onClick={togglePlayPause}>\n        <div className={`bar ${isPlaying ? '' : 'static'}`}></div>\n        <div className={`bar ${isPlaying ? '' : 'static'}`}></div>\n        <div className={`bar ${isPlaying ? '' : 'static'}`}></div>\n        <div className={`bar ${isPlaying ? '' : 'static'}`}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,MAAM,GAAG,GAAG,CAAC,CAAC;MAC/B,IAAIL,SAAS,EAAE;QACbG,QAAQ,CAACC,OAAO,CAACE,IAAI,CAAC,CAAC;MACzB,CAAC,MAAM;QACLH,QAAQ,CAACC,OAAO,CAACG,KAAK,CAAC,CAAC;MAC1B;IACF;EACF,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,oBACEF,OAAA;IAAKU,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCX,OAAA;MAAOY,GAAG,EAAEP,QAAS;MAACQ,IAAI;MAAAF,QAAA,gBACxBX,OAAA;QAAQc,GAAG,EAAC,eAAe;QAACC,IAAI,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAElD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRnB,OAAA;MAAKU,SAAS,EAAC,YAAY;MAACU,OAAO,EAAEjB,eAAgB;MAAAQ,QAAA,gBACnDX,OAAA;QAAKU,SAAS,EAAE,OAAOR,SAAS,GAAG,EAAE,GAAG,QAAQ;MAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1DnB,OAAA;QAAKU,SAAS,EAAE,OAAOR,SAAS,GAAG,EAAE,GAAG,QAAQ;MAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1DnB,OAAA;QAAKU,SAAS,EAAE,OAAOR,SAAS,GAAG,EAAE,GAAG,QAAQ;MAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1DnB,OAAA;QAAKU,SAAS,EAAE,OAAOR,SAAS,GAAG,EAAE,GAAG,QAAQ;MAAG;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BIH,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
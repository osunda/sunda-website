{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\monat-website\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst encryptChar = () => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n  return chars[Math.floor(Math.random() * chars.length)];\n};\nconst Navbar = () => {\n  _s();\n  const [hoverText, setHoverText] = useState({});\n  const [isHovering, setIsHovering] = useState(false);\n  const navItems = ['Folder', 'Connect'];\n  const handleMouseEnter = item => {\n    setIsHovering(true);\n    let encryptedText = item.split('').map(() => encryptChar()).join('');\n    setHoverText({\n      [item]: encryptedText\n    });\n    let currentIndex = 0;\n    const intervalId = setInterval(() => {\n      if (currentIndex < item.length) {\n        setHoverText(prev => ({\n          [item]: prev[item].substring(0, currentIndex) + item[currentIndex] + prev[item].substring(currentIndex + 1)\n        }));\n        currentIndex++;\n      } else {\n        clearInterval(intervalId);\n      }\n    }, 50);\n    setTimeout(() => {\n      clearInterval(intervalId);\n      setHoverText({\n        [item]: item\n      });\n    }, 1000);\n  };\n  const handleMouseLeave = item => {\n    setIsHovering(false);\n    setHoverText({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    id: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navigation\",\n      children: navItems.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: item === 'Folder' ? '/' : `/${item.toLowerCase()}`,\n        onMouseEnter: () => handleMouseEnter(item),\n        onMouseLeave: () => handleMouseLeave(item),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-wrapper\",\n          children: (hoverText[item] || item).split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"char\",\n            children: char\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"ykNpKBIjfj0m2kw5RFg28qBEsu4=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","encryptChar","chars","Math","floor","random","length","Navbar","_s","hoverText","setHoverText","isHovering","setIsHovering","navItems","handleMouseEnter","item","encryptedText","split","map","join","currentIndex","intervalId","setInterval","prev","substring","clearInterval","setTimeout","handleMouseLeave","id","children","className","to","toLowerCase","onMouseEnter","onMouseLeave","char","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/monat-website/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nconst encryptChar = () => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n  return chars[Math.floor(Math.random() * chars.length)];\n};\n\nconst Navbar = () => {\n  const [hoverText, setHoverText] = useState({});\n  const [isHovering, setIsHovering] = useState(false);\n\n  const navItems = ['Folder', 'Connect'];\n\n  const handleMouseEnter = (item) => {\n    setIsHovering(true);\n    let encryptedText = item.split('').map(() => encryptChar()).join('');\n    setHoverText({ [item]: encryptedText });\n\n    let currentIndex = 0;\n    const intervalId = setInterval(() => {\n      if (currentIndex < item.length) {\n        setHoverText(prev => ({\n          [item]: prev[item].substring(0, currentIndex) + item[currentIndex] + prev[item].substring(currentIndex + 1)\n        }));\n        currentIndex++;\n      } else {\n        clearInterval(intervalId);\n      }\n    }, 50);\n\n    setTimeout(() => {\n      clearInterval(intervalId);\n      setHoverText({ [item]: item });\n    }, 1000);\n  };\n\n  const handleMouseLeave = (item) => {\n    setIsHovering(false);\n    setHoverText({});\n  };\n\n  return (\n    <header id=\"navbar\">\n      <nav className=\"navigation\">\n        {navItems.map(item => (\n          <Link \n            key={item}\n            to={item === 'Folder' ? '/' : `/${item.toLowerCase()}`}\n            onMouseEnter={() => handleMouseEnter(item)}\n            onMouseLeave={() => handleMouseLeave(item)}\n          >\n            <span className=\"text-wrapper\">\n              {(hoverText[item] || item).split('').map((char, index) => (\n                <span key={index} className=\"char\">\n                  {char}\n                </span>\n              ))}\n            </span>\n          </Link>\n        ))}\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\monat-website\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [activeItem, setActiveItem] = useState(null);\n  const [hoverText, setHoverText] = useState({});\n  const navItems = ['Folder', 'Connect'];\n  const handleMouseEnter = item => {\n    setActiveItem(item);\n    setHoverText(prev => ({\n      ...prev,\n      [item]: item.replace(/./g, '*')\n    }));\n  };\n  const handleMouseLeave = () => {\n    setActiveItem(null);\n    setHoverText({});\n  };\n  const encryptChar = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n    return chars[Math.floor(Math.random() * chars.length)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    id: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navigation\",\n      children: navItems.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: item === 'Folder' ? '/' : `/${item.toLowerCase()}`,\n        onMouseEnter: () => handleMouseEnter(item),\n        onMouseLeave: handleMouseLeave,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-wrapper\",\n          children: (hoverText[item] || item).split('').map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"char\",\n            children: char === '*' ? encryptChar() : char\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"FVbFXrASh+GUzrj84+vNrlESMNA=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Navbar","_s","activeItem","setActiveItem","hoverText","setHoverText","navItems","handleMouseEnter","item","prev","replace","handleMouseLeave","encryptChar","chars","Math","floor","random","length","id","children","className","map","to","toLowerCase","onMouseEnter","onMouseLeave","split","char","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/monat-website/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [activeItem, setActiveItem] = useState(null);\n  const [hoverText, setHoverText] = useState({});\n\n  const navItems = ['Folder', 'Connect'];\n\n  const handleMouseEnter = (item) => {\n    setActiveItem(item);\n    setHoverText(prev => ({ ...prev, [item]: item.replace(/./g, '*') }));\n  };\n\n  const handleMouseLeave = () => {\n    setActiveItem(null);\n    setHoverText({});\n  };\n\n  const encryptChar = () => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()';\n    return chars[Math.floor(Math.random() * chars.length)];\n  };\n\n  return (\n    <header id=\"navbar\">\n      <nav className=\"navigation\">\n        {navItems.map(item => (\n          <Link \n            key={item}\n            to={item === 'Folder' ? '/' : `/${item.toLowerCase()}`}\n            onMouseEnter={() => handleMouseEnter(item)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <span className=\"text-wrapper\">\n              {(hoverText[item] || item).split('').map((char, index) => (\n                <span key={index} className=\"char\">\n                  {char === '*' ? encryptChar() : char}\n                </span>\n              ))}\n            </span>\n          </Link>\n        ))}\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMU,QAAQ,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC;EAEtC,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCL,aAAa,CAACK,IAAI,CAAC;IACnBH,YAAY,CAACI,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACD,IAAI,GAAGA,IAAI,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG;IAAE,CAAC,CAAC,CAAC;EACtE,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BR,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,KAAK,GAAG,0EAA0E;IACxF,OAAOA,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;EACxD,CAAC;EAED,oBACElB,OAAA;IAAQmB,EAAE,EAAC,QAAQ;IAAAC,QAAA,eACjBpB,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAAD,QAAA,EACxBb,QAAQ,CAACe,GAAG,CAACb,IAAI,iBAChBT,OAAA,CAACF,IAAI;QAEHyB,EAAE,EAAEd,IAAI,KAAK,QAAQ,GAAG,GAAG,GAAG,IAAIA,IAAI,CAACe,WAAW,CAAC,CAAC,EAAG;QACvDC,YAAY,EAAEA,CAAA,KAAMjB,gBAAgB,CAACC,IAAI,CAAE;QAC3CiB,YAAY,EAAEd,gBAAiB;QAAAQ,QAAA,eAE/BpB,OAAA;UAAMqB,SAAS,EAAC,cAAc;UAAAD,QAAA,EAC3B,CAACf,SAAS,CAACI,IAAI,CAAC,IAAIA,IAAI,EAAEkB,KAAK,CAAC,EAAE,CAAC,CAACL,GAAG,CAAC,CAACM,IAAI,EAAEC,KAAK,kBACnD7B,OAAA;YAAkBqB,SAAS,EAAC,MAAM;YAAAD,QAAA,EAC/BQ,IAAI,KAAK,GAAG,GAAGf,WAAW,CAAC,CAAC,GAAGe;UAAI,GAD3BC,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC,GAXFxB,IAAI;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYL,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC/B,EAAA,CA3CID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AA6CZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
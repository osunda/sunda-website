{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\monat-website\\\\src\\\\components\\\\Loader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Loader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loader = () => {\n  _s();\n  const [percentage, setPercentage] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPercentage(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          return 100;\n        }\n        return prev + 1;\n      });\n    }, 30);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loader-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"monat-text\",\n      children: \"Cron group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status-text\",\n      children: [\"Loading components\", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"percentage\",\n        children: [\"[\", percentage, \"%]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Loader, \"cpQp2rHDduFVXlGabXg1MafQewg=\");\n_c = Loader;\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Loader","_s","percentage","setPercentage","interval","setInterval","prev","clearInterval","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/monat-website/src/components/Loader.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Loader.css';\n\nconst Loader = () => {\n    const [percentage, setPercentage] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setPercentage(prev => {\n                if (prev >= 100) {\n                    clearInterval(interval);\n                    return 100;\n                }\n                return prev + 1;\n            });\n        }, 30);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div id=\"loader-wrapper\">\n            <div id=\"monat-text\">Cron group</div>\n            <div id=\"status-text\">\n                Loading components<span id=\"percentage\">[{percentage}%]</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BF,aAAa,CAACG,IAAI,IAAI;QAClB,IAAIA,IAAI,IAAI,GAAG,EAAE;UACbC,aAAa,CAACH,QAAQ,CAAC;UACvB,OAAO,GAAG;QACd;QACA,OAAOE,IAAI,GAAG,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKS,EAAE,EAAC,gBAAgB;IAAAC,QAAA,gBACpBV,OAAA;MAAKS,EAAE,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCd,OAAA;MAAKS,EAAE,EAAC,aAAa;MAAAC,QAAA,GAAC,oBACA,eAAAV,OAAA;QAAMS,EAAE,EAAC,YAAY;QAAAC,QAAA,GAAC,GAAC,EAACP,UAAU,EAAC,IAAE;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACZ,EAAA,CAzBID,MAAM;AAAAc,EAAA,GAANd,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}